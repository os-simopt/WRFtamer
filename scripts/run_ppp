#!/usr/bin/env python3

"""
This script is called by the wt watchdog. It searches for experiments with the status "run complete" and performs
the postprocessing protocol defined in the configure.yaml file.
"""

from wrftamer.wrftamer_paths import wrftamer_paths
from wrftamer.project_management import project, list_projects
from wrftamer.experiment_management import experiment
import datetime as dt


def run_ppp_for_completed_exp(silent=False, verbose=False):
    """""
    Args:
        silent: If true, no output is printed at all.
        verbose: If true: Everyting is printed.

    The default behaviour (silent=False, verbose=False) is most likely the desired behaviour.

    """

    home_path, db_path, run_path, archive_path = wrftamer_paths()
    #logfile = run_path / 'watchdog.log'
    logfile = '/home/daniel/watchdog.log'

    log = open(logfile, 'a')

    list_of_proj = list_projects(False)
    list_of_proj.append(None)

    for proj_name in list_of_proj:

        if not silent:
            log.write('----------------\n')
            if proj_name is not None:
                log.write('Project: ' + proj_name+'\n')
            else:
                log.write('Not associated with any project: \n')

        proj = project(proj_name)

        list_of_exps = proj.list_exp(False)

        for exp_name in list_of_exps:
            exp = experiment(proj_name, exp_name)

            if exp.status == 'run complete':
                if not silent:
                    log.write('    '+str(dt.datetime.now()) +
                              ': Performing ppp for experiment ' + exp.name+'\n')
                # exp.run_postprocessing_protocol(verbose)
            else:
                if not silent and verbose:
                    log.write('    '+str(dt.datetime.now()) +
                              ': Nothing to do for experiment' + exp.name+'\n')


#if __name__ == '__main__':
run_ppp_for_completed_exp()
