[project]
    name= "wrftamer"
    version = "1.0.0"
    description="A tool to manage WRF experiments"
    authors = [
        {name = "Daniel Leukauf", email="daniel.leukauf@zsw-bw.de"},
        ]
    license = {file = 'LICENSE'}
    readme = "README.md"
    requires-python = ">=3.9"
    keywords = ["WRF"]
    classifiers = [
        "Topic :: Software Development",
	"Programming Language :: Python"
        ]
    dependencies = [
        "click",
        "toml",
        "numpy",
        "pandas>=1.3.5",
        "matplotlib",
        "pyyaml",
        "netcdf4",
        "xarray",
        "python-crontab",
        "openpyxl",
        "simopt-tools"
        ]

[project.optional-dependencies]
    dev = [
        "pytest",
        "pytest-cov",
        "coverage",
        "conda-build"
    ]

[project.urls]
    homepage = "https://wrftamer.readthedocs.io/en/latest/"
    documentation = "https://wrftamer.readthedocs.io/en/latest/"
    repository = "https://github.com/os-simopt/wrftamer"

[tool.poetry]
    packages = [
    'wrfplotter',
    'gui',
    ]

[tool.poetry.scripts]

[build-system]
    requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]

[tool.setuptools_scm]

[tool.conda-lock]
    channels = [
        'conda-forge',
        'os-simopt',
    ]
    platforms = [
        'linux-64'
    ]

[tool.black]
line-length=120

[pylint.FORMAT]
max-line-length=120

[tool.pytest.ini_options]
    minversion="6.0"
    addopts = "-m 'not wip and not slow and not config_req' --cov-branch --cov-report term-missing --cov-report xml --cov-report html --cov-report term --cov=wrftamer -vv --strict-markers -rfE"
    markers = [
        "slow: marks tests as slow (deselect with '-m \"not slow\"')",
        "wip: marks all work-in-progress tests",
        "bugfix: marks test that require bugfixing",
        "config_req: marks tests that require a valid config file"
    ]

    testpaths = [
        "tests"
        ]

[tool.coverage.run]
    branch=true
    omit = [
        '*/tests/*',
        '*/__init__.py',
        '*/scripts/*',
        '*/templates/*',
        ]
    relative_files = true

[tool.coverage.report]
    exclude_lines = [
        "pragma: no cover",
        ]

[tool.coverage.html]
    directory = 'reports'


